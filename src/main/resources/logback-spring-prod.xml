<!-- 운영 - RollingFileAppender -->
<included>

    <property resource="logback-variables.properties"/>

    <appender name="REQUEST1" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/request1.log</file><!--파일명(경로) 지정-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/archive/request1.%d{yyyy-MM-dd}_%i.log</fileNamePattern><!-- 지정한 시간이 지나면 archive디렉토리 하위에 request1.날짜_순서.log 이름으로 저장-->
            <maxFileSize>1KB</maxFileSize> <!-- 최대file 사이즈 -->
            <maxHistory>30</maxHistory> <!-- 로그 파일 관리 최대 보관 주기 (단위: 일) -->
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                [REQUEST1] ${LOG_PATTERN}
            </pattern>
            <outputPatternAsHeader>true</outputPatternAsHeader> <!-- 파일 헤더에 현재 어떠한 패턴으로 로그를 출력하는지를 함께 노출(저장) 시켜주는 설정 -->
        </encoder>
    </appender>
    <appender name="REQUEST2" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/request2.log</file><!--파일명(경로) 지정-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/archive/request2.%d{yyyy-MM-dd}_%i.log</fileNamePattern><!-- 지정한 시간이 지나면 archive디렉토리 하위에 request1.날짜_순서.log 이름으로 저장-->
            <maxFileSize>10KB</maxFileSize> <!-- 최대file 사이즈 -->
            <maxHistory>30</maxHistory> <!-- 로그 파일 관리 최대 보관 주기 (단위: 일) -->
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                [REQUEST1] ${LOG_PATTERN}
            </pattern>
            <outputPatternAsHeader>true</outputPatternAsHeader> <!-- 파일 헤더에 현재 어떠한 패턴으로 로그를 출력하는지를 함께 노출(저장) 시켜주는 설정 -->
        </encoder>
    </appender>
    <appender name="MDC" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/mdc.log</file><!--파일명(경로) 지정-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/archive/mdc.%d{yyyy-MM-dd}_%i.log</fileNamePattern><!-- 지정한 시간이 지나면 archive디렉토리 하위에 request1.날짜_순서.log 이름으로 저장-->
            <maxFileSize>10KB</maxFileSize> <!-- 최대file 사이즈 -->
            <maxHistory>30</maxHistory> <!-- 로그 파일 관리 최대 보관 주기 (단위: 일) -->
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                [MDC] %X{job}%n <!-- %X를 사용하게 되면 MDC 안에 지정한 값을 Key로 조회할 수 있게 된다. -->
            </pattern>
            <outputPatternAsHeader>true</outputPatternAsHeader> <!-- 파일 헤더에 현재 어떠한 패턴으로 로그를 출력하는지를 함께 노출(저장) 시켜주는 설정 -->
        </encoder>
    </appender>
    <!-- Filter -->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/error.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter"><!-- Filter 옵션 추가 - 레벨 필터를 통해 레벨 단위로 필터링-->
            <level>error</level>
            <onMatch>ACCEPT</onMatch> <!--완전 일치하다면 로그 허용-->
            <onMismatch>DENY</onMismatch> <!-- 완전일치하지 않으면 로그 거절 -->
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/archive/error.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
            <maxFileSize>10KB</maxFileSize>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                [ERROR] %X{job}%n
            </pattern>
            <outputPatternAsHeader>true</outputPatternAsHeader>
        </encoder>
    </appender>
    <appender name="WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/warn.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter"><!-- Filter 옵션 추가 - 레벨 필터를 통해 레벨 단위로 필터링-->
            <level>error</level>
            <onMatch>ACCEPT</onMatch> <!--완전 일치하다면 로그 허용-->
            <onMismatch>DENY</onMismatch> <!-- 완전일치하지 않으면 로그 거절 -->
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/archive/warn.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
            <maxFileSize>10KB</maxFileSize>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                [WARN] %X{job}%n
            </pattern>
            <outputPatternAsHeader>true</outputPatternAsHeader>
        </encoder>
    </appender>
    <root level="INFO">
<!--        <appender-ref ref="REQUEST1" />-->
<!--        <appender-ref ref="REQUEST2" />-->
<!--        <appender-ref ref="MDC" />-->
<!--        <appender-ref ref="ERROR" />-->
        <appender-ref ref="WARN" />
    </root>
</included>
